{"version":3,"sources":["imgs/clear_day.svg","imgs/cloudy.svg","imgs/drizzle.svg","imgs/flurries.svg","imgs/fog.svg","imgs/fog_light.svg","imgs/freezing_drizzle.svg","imgs/freezing_rain.svg","imgs/freezing_rain_heavy.svg","imgs/freezing_rain_light.svg","imgs/ice_pellets.svg","imgs/ice_pellets_heavy.svg","imgs/ice_pellets_light.svg","imgs/mostly_clear_day.svg","imgs/mostly_cloudy.svg","imgs/partly_cloudy_day.svg","imgs/rain.svg","imgs/rain_heavy.svg","imgs/rain_light.svg","imgs/snow.svg","imgs/snow_heavy.svg","imgs/snow_light.svg","imgs/tstorm.svg","imgs/first_quarter.svg","imgs/full.svg","imgs/last_quarter.svg","imgs/new.svg","imgs/waning_crescent.svg","imgs/waning_gibbous.svg","imgs/waxing_crescent.svg","imgs/waxing_gibbous.svg","imgs/citation.svg","logo.svg","imgs/clear_night.svg","imgs/mostly_clear_night.svg","imgs/partly_cloudy_night.svg","imgs/precip.svg","App.js","serviceWorker.js","index.js"],"names":["module","exports","COLORS","event","setWeather","location","a","preventDefault","encodedLocation","encodeURI","axios","get","geoResponse","lat","data","lon","current","locName","display_name","city","substring","length","temp","value","weather_code","moon_phase","sunrise","Date","toLocaleTimeString","sunset","nameForDisplay","codeName","displayName","split","forEach","part","push","charAt","toUpperCase","slice","join","selectMoonIcon","first_quarter","full","last_quarter","new_moon","waning_crescent","waning_gibbous","waxing_gibbous","waxing_crescent","selectWeatherIcon","freezing_rain_heavy","freezing_rain","freezing_rain_light","freezing_drizzle","ice_pellets_heavy","ice_pellets","ice_pellets_light","snow_heavy","snow","snow_light","flurries","tstorm","rain_heavy","rain","rain_light","drizzle","fog_light","fog","cloudy","mostly_cloudy","partly_cloudy_day","mostly_clear_day","clear_day","App","useState","precip","weather","bg","font","colors","setColors","input","setLocation","className","style","backgroundColor","Switch","onClick","themeSwitch","Form","onSubmit","getWeather","Control","onChange","target","formChange","type","placeholder","Button","variant","color","src","width","height","citation","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f33204dc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/clear_day.9d31deca.svg\";","module.exports = __webpack_public_path__ + \"static/media/cloudy.e4c1f2cf.svg\";","module.exports = __webpack_public_path__ + \"static/media/drizzle.1ee49c93.svg\";","module.exports = __webpack_public_path__ + \"static/media/flurries.9bedcf86.svg\";","module.exports = __webpack_public_path__ + \"static/media/fog.44096d7e.svg\";","module.exports = __webpack_public_path__ + \"static/media/fog_light.997c49a0.svg\";","module.exports = __webpack_public_path__ + \"static/media/freezing_drizzle.a5c6c775.svg\";","module.exports = __webpack_public_path__ + \"static/media/freezing_rain.f57ff72c.svg\";","module.exports = __webpack_public_path__ + \"static/media/freezing_rain_heavy.50f3e5e7.svg\";","module.exports = __webpack_public_path__ + \"static/media/freezing_rain_light.4827759b.svg\";","module.exports = __webpack_public_path__ + \"static/media/ice_pellets.f090e789.svg\";","module.exports = __webpack_public_path__ + \"static/media/ice_pellets_heavy.5ee0972c.svg\";","module.exports = __webpack_public_path__ + \"static/media/ice_pellets_light.54609c36.svg\";","module.exports = __webpack_public_path__ + \"static/media/mostly_clear_day.689ef5f0.svg\";","module.exports = __webpack_public_path__ + \"static/media/mostly_cloudy.3784af72.svg\";","module.exports = __webpack_public_path__ + \"static/media/partly_cloudy_day.5c211d88.svg\";","module.exports = __webpack_public_path__ + \"static/media/rain.e3eb4f73.svg\";","module.exports = __webpack_public_path__ + \"static/media/rain_heavy.bd48faa0.svg\";","module.exports = __webpack_public_path__ + \"static/media/rain_light.26a314de.svg\";","module.exports = __webpack_public_path__ + \"static/media/snow.5a4d5c56.svg\";","module.exports = __webpack_public_path__ + \"static/media/snow_heavy.4ec83184.svg\";","module.exports = __webpack_public_path__ + \"static/media/snow_light.09e6c94d.svg\";","module.exports = __webpack_public_path__ + \"static/media/tstorm.53d2b843.svg\";","module.exports = __webpack_public_path__ + \"static/media/first_quarter.4abb1006.svg\";","module.exports = __webpack_public_path__ + \"static/media/full.5c96ec46.svg\";","module.exports = __webpack_public_path__ + \"static/media/last_quarter.5ba3f07b.svg\";","module.exports = __webpack_public_path__ + \"static/media/new.06cdfc96.svg\";","module.exports = __webpack_public_path__ + \"static/media/waning_crescent.4c40b2df.svg\";","module.exports = __webpack_public_path__ + \"static/media/waning_gibbous.a84aae00.svg\";","module.exports = __webpack_public_path__ + \"static/media/waxing_crescent.407d8e61.svg\";","module.exports = __webpack_public_path__ + \"static/media/waxing_gibbous.3a58b2c4.svg\";","module.exports = __webpack_public_path__ + \"static/media/citation.27c8fdc0.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/clear_night.ef473ad9.svg\";","module.exports = __webpack_public_path__ + \"static/media/mostly_clear_night.5b6b6612.svg\";","module.exports = __webpack_public_path__ + \"static/media/partly_cloudy_night.54fd9400.svg\";","module.exports = __webpack_public_path__ + \"static/media/precip.e4374187.svg\";","import React, {useState} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Form from \"react-bootstrap/Form\"\nimport Button from \"react-bootstrap/Button\"\nimport Switch from '@material-ui/core/Switch';\nimport axios from 'axios';\nimport clear_day from \"./imgs/clear_day.svg\"\nimport clear_night from \"./imgs/clear_night.svg\"\nimport cloudy from \"./imgs/cloudy.svg\"\nimport drizzle from \"./imgs/drizzle.svg\"\nimport flurries from \"./imgs/flurries.svg\"\nimport fog from \"./imgs/fog.svg\"\nimport fog_light from \"./imgs/fog_light.svg\"\nimport freezing_drizzle from \"./imgs/freezing_drizzle.svg\"\nimport freezing_rain from \"./imgs/freezing_rain.svg\"\nimport freezing_rain_heavy from \"./imgs/freezing_rain_heavy.svg\"\nimport freezing_rain_light from \"./imgs/freezing_rain_light.svg\"\nimport ice_pellets from \"./imgs/ice_pellets.svg\"\nimport ice_pellets_heavy from \"./imgs/ice_pellets_heavy.svg\"\nimport ice_pellets_light from \"./imgs/ice_pellets_light.svg\"\nimport mostly_clear_day from \"./imgs/mostly_clear_day.svg\"\nimport mostly_clear_night from \"./imgs/mostly_clear_night.svg\"\nimport mostly_cloudy from \"./imgs/mostly_cloudy.svg\"\nimport partly_cloudy_day from \"./imgs/partly_cloudy_day.svg\"\nimport partly_cloudy_night from \"./imgs/partly_cloudy_night.svg\"\nimport rain from \"./imgs/rain.svg\"\nimport rain_heavy from \"./imgs/rain_heavy.svg\"\nimport rain_light from \"./imgs/rain_light.svg\"\nimport snow from \"./imgs/snow.svg\"\nimport snow_heavy from \"./imgs/snow_heavy.svg\"\nimport snow_light from \"./imgs/snow_light.svg\"\nimport tstorm from \"./imgs/tstorm.svg\"\nimport first_quarter from \"./imgs/first_quarter.svg\"\nimport  full from \"./imgs/full.svg\"\nimport  last_quarter from \"./imgs/last_quarter.svg\"\nimport  new_moon from \"./imgs/new.svg\"\nimport  waning_crescent from \"./imgs/waning_crescent.svg\"\nimport  waning_gibbous from \"./imgs/waning_gibbous.svg\"\nimport  waxing_crescent from \"./imgs/waxing_crescent.svg\"\nimport waxing_gibbous from \"./imgs/waxing_gibbous.svg\"\nimport citation from \"./imgs/citation.svg\"\nimport precip from \"./imgs/precip.svg\"\n\n// https://www.climacell.co/\n\nconst COLORS = {\n  bg_dark: \"#121212\",\n  bg_lite: \"#FFFFFF\"\n} \n\nconst LIMIT = 20\n\n\n\n\nasync function getWeather(event, setWeather,location) {\n  event.preventDefault(); \n\n  let encodedLocation = encodeURI(location)\n  const geoResponse = await axios.get(\"https://us1.locationiq.com/v1/search.php?key=pk.d3aef1aced9332bcbdc65c8b5e57e910&q=\" + encodedLocation + \"&format=json\")\n  \n  let lat = geoResponse.data[0].lat\n  let lon = geoResponse.data[0].lon\n\n  // const response = await axios.get(\"https://api.climacell.co/v3/weather/forecast/daily?lat=41.881832&lon=-87.623177&unit_system=us&start_time=now&fields=precipitation%2Csunrise%2Csunset%2Cprecipitation_probability%2Cmoon_phase%2Cweather_code%2Ctemp&apikey=\")\n  const current = await axios.get(\"https://api.climacell.co/v3/weather/realtime?lat=\" + lat + \"&lon=\" + lon + \"&unit_system=us&fields=temp%2Cweather_code%2Cmoon_phase%2Csunrise%2Csunset&apikey=H1st0DUBRMrQ41CaELJFPbeprtMU1jDH\")\n\n  let locName = geoResponse.data[0].display_name\n  setWeather({\n    city: locName.substring(0, LIMIT) + ((locName.length < LIMIT) ? \"\" : \"...\"), \n    temp: current.data.temp.value,\n    weather_code: current.data.weather_code.value,\n    moon_phase: current.data.moon_phase.value,\n    sunrise: new Date(current.data.sunrise.value).toLocaleTimeString(),\n    sunset: new Date(current.data.sunset.value).toLocaleTimeString()\n  })\n}\n\nfunction nameForDisplay(codeName) {\n  let displayName = []\n  codeName.split(\"_\").forEach(part => \n    displayName.push(part.charAt(0).toUpperCase() + part.slice(1))\n  )\n  return displayName.join(\" \")\n}\n\nfunction selectMoonIcon(codeName) {\n  switch(codeName) {\n    case \"first_quarter\":\n      return first_quarter;\n    case \"full\":\n      return full\n    case \"last_quarter\":\n      return last_quarter\n    case \"new\":\n      return new_moon\n    case \"waning_crescent\":\n      return waning_crescent\n    case \"waning_gibbous\":\n      return waning_gibbous\n    case \"waxing_gibbous\":\n      return waxing_gibbous\n    case \"waxing_crescent\":\n    return waxing_crescent\n  }\n}\n\nfunction selectWeatherIcon(codeName) {\n\n  switch(codeName) {\n    case \"freezing_rain_heavy\":\n      return freezing_rain_heavy;\n    case \"freezing_rain\":\n      return freezing_rain;\n    case \"freezing_rain_light\":\n      return freezing_rain_light;\n    case \"freezing_drizzle\":\n      return freezing_drizzle;\n    case \"ice_pellets_heavy\":\n      return ice_pellets_heavy;\n    case \"ice_pellets\":\n      return ice_pellets;\n    case \"ice_pellets_light\":\n      return ice_pellets_light;\n    case \"snow_heavy\":\n      return snow_heavy;\n    case \"snow\":\n      return snow;\n    case \"snow_light\":\n      return snow_light;\n    case \"flurries\":\n      return flurries;\n    case \"tstorm\":\n      return tstorm;\n    case \"rain_heavy\":\n      return rain_heavy;\n    case \"rain\":\n      return rain;\n    case \"rain_light\":\n      return rain_light;\n    case \"drizzle\":\n      return drizzle;\n    case \"fog_light\":\n      return fog_light;\n    case \"fog\":\n      return fog;\n    case \"cloudy\":\n      return cloudy;\n    case \"mostly_cloudy\":\n      return mostly_cloudy;\n    case \"partly_cloudy\":\n      return partly_cloudy_day;\n    case \"partly_cloudy\":\n      return ;\n    case \"mostly_clear\":\n      return mostly_clear_day;\n    case \"mostly_clear\":\n      return ;\n    case \"clear\":\n      return clear_day;\n    case \"clear\":\n      return ;\n  }\n\n}\nfunction themeSwitch(colors, setColors) {\n  if (colors.bg === COLORS.bg_lite) {\n    setColors({\n      bg: COLORS.bg_dark,\n      font: COLORS.bg_lite\n    })\n  } else {\n    setColors({\n      bg: COLORS.bg_lite,\n      font: COLORS.bg_dark\n    })\n  }\n}\n\nfunction formChange(event, setLocation) {\n  setLocation({input: event.target.value})\n}\n\nfunction App() {\n  \n//weatherLookup[weather.weather_code][1]\n  const [weather, setWeather] = useState({\n    city: \"----\",\n    temp: \"--\", \n    weather_code: \"---\", \n    moon_phase:\"---\",\n    sunrise: \"-\",\n    sunset: \"-\",\n    precip: \"--\"\n  \n  });\n\n  const [colors, setColors] = useState({\n    bg: COLORS.bg_lite,\n    font: COLORS.bg_dark\n  });\n\n  const [location, setLocation] = useState({\n    input: \"\"\n  })\n  \n  return (\n    <div className=\"App\" style={{backgroundColor: colors.bg}}>\n      \n      <div className=\"holder\" >\n      <Switch className=\"bob\" onClick={() => themeSwitch(colors, setColors)}/>\n        <Form onSubmit={(event) => getWeather(event,setWeather, location.input)}>\n          <div className=\"search\">\n            <Form.Control \n              value={location.input}\n              onChange={(event) => formChange(event, setLocation)} \n              type=\"textarea\" \n              placeholder=\"🔍 Search\" \n            />\n            <Button type=\"submit\" variant=\"secondary\">🔍</Button>\n          </div>\n          <div className=\"weather\">\n            <h2 style={{color: colors.font}}>➤ {weather.city}</h2>\n            <div className=\"currentConditions\">\n              <img src={selectWeatherIcon(weather.weather_code)} width=\"64\" height=\"64\" /> \n              <h2 className=\"temp\" style={{color: colors.font}}>{weather.temp}°</h2> \n              <h3 className=\"condition\" style={{color: colors.font}}>{nameForDisplay(weather.weather_code)}</h3>\n            </div>\n            {/* <div className=\"rainChance\">\n              <img src={precip} width=\"64\" height=\"64\" />\n              <h2 className=\"percent\" style={{color: colors.font}}> {weather.precip}%</h2>\n            </div> */}\n            {/* <div className=\"sun\">\n              <h3 style={{color: colors.font}}><b>Day:</b> {weather.sunrise}-{weather.sunset}</h3>\n            </div> */}\n            <div className=\"moon\"> \n              <img src={selectMoonIcon(weather.moon_phase)} width=\"64\" height=\"64\" /> \n              <h3 className=\"moonPhase\" style={{color: colors.font}}>{nameForDisplay(weather.moon_phase)}</h3>\n            </div>\n          </div>\n        </Form>\n      </div>\n      \n      <img className=\"citation\" src={citation} />\n    </div>\n    \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}